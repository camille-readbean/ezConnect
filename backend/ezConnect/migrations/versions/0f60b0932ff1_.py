"""empty message

Revision ID: 0f60b0932ff1
Revises: 22be9cc508e8
Create Date: 2023-07-04 03:47:23.574831

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0f60b0932ff1'
down_revision = '22be9cc508e8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('personal_study_plan',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('date_updated', sa.DateTime(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=True),
    sa.Column('creator_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['users.azure_ad_oid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('published_study_plan',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('date_updated', sa.DateTime(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('num_of_likes', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.UUID(), nullable=False),
    sa.Column('personal_study_plan_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['users.azure_ad_oid'], ),
    sa.ForeignKeyConstraint(['personal_study_plan_id'], ['personal_study_plan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('favorited_study_plan',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('published_study_plan_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['published_study_plan_id'], ['published_study_plan.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.azure_ad_oid'], )
    )
    op.create_table('liked_study_plan',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('published_study_plan_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['published_study_plan_id'], ['published_study_plan.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.azure_ad_oid'], )
    )
    with op.batch_alter_table('study_plan_semester', schema=None) as batch_op:
        batch_op.add_column(sa.Column('personal_study_plan_id', sa.UUID(), nullable=True))
        batch_op.add_column(sa.Column('published_study_plan_id', sa.UUID(), nullable=True))
        batch_op.drop_constraint('semesters_in_study_plan_unique', type_='unique')
        batch_op.create_unique_constraint('semesters_in_published_study_plan_unique', ['published_study_plan_id', 'semester_number'])
        batch_op.drop_constraint('study_plan_semester_study_plan_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key('published_study_plan_semester', 'published_study_plan', ['published_study_plan_id'], ['id'])
        batch_op.create_foreign_key('personal_study_plan_semester', 'personal_study_plan', ['personal_study_plan_id'], ['id'])
        batch_op.drop_column('study_plan_id')
    op.drop_table('study_plan')
        
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('study_plan',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('is_published', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('num_of_likes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('creator_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['users.azure_ad_oid'], name='study_plan_creator_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='study_plan_pkey')
    )

    with op.batch_alter_table('study_plan_semester', schema=None) as batch_op:
        batch_op.add_column(sa.Column('study_plan_id', sa.UUID(), autoincrement=False, nullable=True))
        batch_op.drop_constraint('personal_study_plan_semester', type_='foreignkey')
        batch_op.drop_constraint('published_study_plan_semester', type_='foreignkey')
        batch_op.create_foreign_key('study_plan_semester_study_plan_id_fkey', 'study_plan', ['study_plan_id'], ['id'])
        batch_op.drop_constraint('semesters_in_published_study_plan_unique', type_='unique')
        batch_op.create_unique_constraint('semesters_in_study_plan_unique', ['study_plan_id', 'semester_number'])
        batch_op.drop_column('published_study_plan_id')
        batch_op.drop_column('personal_study_plan_id')

    op.drop_table('liked_study_plan')
    op.drop_table('favorited_study_plan')
    op.drop_table('published_study_plan')
    op.drop_table('personal_study_plan')
    # ### end Alembic commands ###
