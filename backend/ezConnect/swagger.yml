openapi: 3.0.0
info:
  title: "EzCopnnect REST API"
  description: "An API about people and courses"
  version: "0.0.3"

servers:
  - url: "/api"

components:
  schemas:
    SignUpNewUser:
      type: "object"
      required:
        - name
        - email
        - year
        - degrees
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        year:
          type: integer
          maximum: 6
          minimum: 1
        degrees:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              title:
                type: string
        programmes:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              title:
                type: string
    StudyPlan:
      type: object
      properties:
        date_updated:
          type: string
          format: date-time
        is_published:
          type: boolean
        title:
          type: string
        description:
          type: string
        num_of_likes:
          type: integer
        creator_id:
          type: integer
        semesters:
          type: object
    StudyPlanSemesterInformation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        semester_number:
          type: integer
        total_units:
          type: integer
        course_codes:
          type: array
    MentoringPost:
      type: object
      properties:
        title:
          type: string
          description: Title of the mentoring post
        description:
          type: string
          description: Description of the mentoring post
        course_code:
          type: string
          description: Code of the course user is mentoring
    UpdateMentoringPost:
      type: object
      properties:
        title:
          type: string
          description: Title of the mentoring post
        description:
          type: string
          description: Description of the mentoring post
        is_published:
          type: boolean
          description: Indicator if the mentoring post is published
    MentorPostingResponse:
      type: object
      properties:
        posting_uuid:
          type: string
          description: UUID of the mentoring posting
        course:
          type: string
          description: Code of the course
        title:
          type: string
          description: Title of the mentor posting
        description:
          type: string
          description: Description of the mentor posting
        date_updated:
          type: string
          format: date
          description: Date of the last update of the mentor posting
        name:
          type: string
          description: Name of the user behind this posting
    MentorPostingsResponse:
      type: object
      properties:
        postings:
          type: array
          items:
            $ref: '#/components/schemas/MentorPostingResponse'
  parameters:
    user_id:
      in: path
      name: user_id
      required: true
      schema:
        type: string
        minLength: 36
        maxLength: 36
        format: uuid
      description: "User ID"
    study_plan_id:
      in: path
      name: study_plan_id
      required: true
      schema:
        type: string
        format: uuid
      description: "The id of the study plan that this request is associated with"
    semester_id:
      in: path
      name: semester_id
      required: true
      schema:
        type: string
        format: uuid
        description: "Study plan semester id"
    mentor_posting_id:
      in: path
      name: mentor_posting_id
      description: UUID of the mentoring posting to update
      required: true
      schema:
        type: string
        format: uuid
    mentoring_match_id:
      in: path
      name: mentoring_match_id
      description: UUID of the mentor-mentee match
      required: true
      schema:
        type: string
        format: uuid
  securitySchemes:
    # Keeping it as JWT to faciliate debugging
    # Get the token manually from frontend and input it to authorise...
    # Swagger does not see mto support 
    # Also help in debugging as we can use a custom dev only jwt to skip
    # Azure B2C login, which is hard to do in CI/CD in the future...
    jwt:
      type: http
      description: |
        This actually relies on Azure AD B2C in the frontend for login
        Kept as JWT to enable manual input of the access token in Swagger UI
        for testing purposes. Swagger does not seem to work with Auth Code Flow 
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: "ezConnect.auth.login.decode_token"

        
paths: 
  /user/create-user:
    put: 
      operationId: "ezConnect.auth.signup.create_user"
      tags:
        - "Sign Up"
      summary: |
        Create account for user after logging in with Azure AD B2C.
        User ID comes from Azure B2C, will be used as primary key.
        UserId will come from token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpNewUser"
            example:
              name: "John Doe"
              email: "testemail@ruibin.me"
              year: 2
              degrees: [
                {
                  "id": "fce92068-5d0d-400a-aeb4-2673370b84c5",
                  "title": "Computer Science"
                },
                {
                  "id": "4a18721c-2f9a-42fd-b3d3-820e2564d352",
                  "title": "Medicine"
                }
              ]
              programmes: [
                {
                  "id": "e219ca40-ed55-4976-ae2a-c46f2a77ae02",
                  "title": "University Town College Programme"
                },
                {
                  "id": "5102f572-920a-400a-ae2c-3575fb7e8acf",
                  "title": "Minor in Meteorology and Climate Science"
                }
              ]
              azure_ad_oid: 12345678-1234-1234-1234-1234abcdef00
      security:
        - jwt: []
      responses:
        "200":
          description: User ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "409":
          description: "Invalid request: user already exist in database"
  /mentoring/mentors/new-mentor:
    put:
      tags: 
        - Mentoring
      operationId: "ezConnect.mentoring.mentor.create_mentor"
      summary: Create a mentoring post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MentoringPost'
      security:
        - jwt: []
      responses:
        '200':
          description: Mentoring post created successfully
        '400':
          description: Invalid request body
  /mentoring/mentors:
    get:
      tags:
        - Mentoring
      operationId: "ezConnect.mentoring.mentor.get_mentors"
      summary: return a list of all published mentors
      security:
        - jwt: []
      responses:
        '200':
          description: Mentors retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentorPostingsResponse'
  /mentoring/mentors/{mentor_posting_id}/update:
    put:
      tags:
        - Mentoring
      operationId: "ezConnect.mentoring.mentor.update_mentor"
      summary: Update mentor posting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMentoringPost'
      parameters:
        - $ref: '#/components/parameters/mentor_posting_id'
      security:
        - jwt: []
      responses:
        '200':
          description: Mentor posting updated successfully
  /mentoring/mentors/{mentor_posting_id}/request:
    post:
      tags:
        - Mentoring
      operationId: "ezConnect.mentoring.mentor.request_mentor"
      summary: Request a mentor for a mentor posting
      parameters:
        - $ref: '#/components/parameters/mentor_posting_id'
      security:
        - jwt: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /mentoring/matches/{mentoring_match_id}/accept-mentee:
    post:
      tags:
        - Mentoring
      operationId: "ezConnect.mentoring.matches.accept_mentee"
      summary: Accept or reject a mentor for a mentor match
      parameters:
        - $ref: '#/components/parameters/mentoring_match_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accept:
                  type: boolean
                message:
                  type: string
              required:
                - accept
                - message
      security:
        - jwt: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /mentoring/mentees/new-mentee:
    put:
      tags: 
        - Mentoring
      operationId: "ezConnect.mentoring.mentee.create_request"
      summary: Create a mentoring post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MentoringPost'
      security:
        - jwt: []
      responses:
        '201':
          description: Mentoring post created successfully
        '400':
          description: Invalid request body
  /mentoring/mentees:
    get:
      tags:
        - Mentoring
      operationId: "ezConnect.mentoring.mentee.get_mentees"
      summary: return a list of all published mentees
      security:
        - jwt: []
      responses:
        '200':
          description: Mentees retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentorPostingsResponse'
  /mentoring/mentees/{mentor_posting_id}/update:
    put:
      tags:
        - Mentoring
      operationId: "ezConnect.mentoring.mentee.update_mentee"
      summary: Update mentor posting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMentoringPost'
      parameters:
        - $ref: '#/components/parameters/mentor_posting_id'
      security:
        - jwt: []
      responses:
        '200':
          description: Mentor request posting updated successfully
  /mentoring/mentees/{mentor_posting_id}/request:
    post:
      tags:
        - Mentoring
      operationId: "ezConnect.mentoring.mentee.request_mentee"
      summary: Request a mentee for a mentee posting
      parameters:
        - $ref: '#/components/parameters/mentor_posting_id'
      security:
        - jwt: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /mentoring/matches/{mentoring_match_id}/accept-mentor:
    post:
      tags:
        - Mentoring
      operationId: "ezConnect.mentoring.matches.accept_mentor"
      summary: Accept or reject a mentor for a mentor match
      parameters:
        - $ref: '#/components/parameters/mentoring_match_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accept:
                  type: boolean
                message:
                  type: string
              required:
                - accept
                - message
      security:
        - jwt: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /mentoring/matches::
    get:
      summary: Get matches for a user
      tags:
        - Mentoring
      operationId: "ezConnect.mentoring.matches.get_matches"
      security:
        - jwt: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  mentor_matches:
                    type: array
                    items:
                      type: object
                      properties:
                        posting_uuid:
                          type: string
                        course_code:
                          type: string
                        mentee_name:
                          type: string
                        status:
                          type: string
                  mentee_matches:
                    type: array
                    items:
                      type: object
                      properties:
                        posting_uuid:
                          type: string
                        course_code:
                          type: string
                        mentor_name:
                          type: string
                        status:
                          type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /studyplan:
    get:
      operationId: "ezConnect.study_plan.studyplan.get_published_study_plans"
      tags:
        - Study Plan
      summary: "Read a collection of published study plans"
      responses:
        '200':
          description: Study plans
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudyPlan"
    post:
      operationId: "ezConnect.study_plan.studyplan.create_study_plan"
      tags:
        - Study Plan
      summary: "Create a study plans"
      requestBody:
        description: "Study plan to create"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                creator_id:
                  type: string
                  format: uuid
              required:
                - creator_id
            example:
              creator_id: 12a3b456-c7de-44ce-bde9-a123bc00237d
      responses:
        '200':
          description: Study plan successfully created
    
  /studyplan/{study_plan_id}:
    get:
      operationId: "ezConnect.study_plan.studyplan.get_a_study_plan"
      tags:
        - Study Plan
      summary: "Read a particular study plan"
      parameters:
        - $ref: "#/components/parameters/study_plan_id"
      responses:
        '200': 
          description: Read a particular study plan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudyPlan"
        '404':
          description: Study plan does not exist
    put:
      operationId: "ezConnect.study_plan.studyplan.update_study_plan"
      tags:
        - Study Plan
      summary: "Update an existing study plan"
      parameters:
        - $ref: "#/components/parameters/study_plan_id"
      requestBody:
        description: "Study plan to update"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_published:
                  type: boolean
                title:
                  type: string
                description:
                  type: string
                num_of_likes:
                  type: integer
            example:
              is_published: True
              title: "Chemistry major with minor in nutrition"
              description: "Y2 student under CHS. Started minor in Y2. I overloaded in Y1S2 and I recommend doing this."
              num_of_likes: 25
      responses:
        '200':
          description: Update an existing study plan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudyPlan"
        '404':
          description: Study plan does not exist
    delete:
      operationId: "ezConnect.study_plan.studyplan.delete_study_plan"
      tags:
        - Study Plan
      summary: "Delete an existing study plan"
      parameters:
        - $ref: "#/components/parameters/study_plan_id"
      responses:
        '200':
          description: Delete an existing study plan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudyPlan"
        '404':
          description: Study plan does not exist
    
  /studyplan/personal/{user_id}:
    get:
      operationId: "ezConnect.study_plan.studyplan.get_personal_study_plans"
      tags:
        - Study Plan
      summary: "Read a collection of personal study plans"
      parameters:
        - $ref: "#/components/parameters/user_id"
      responses:
        '200': 
          description: Read a collection of personal study plans
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudyPlan"
        '404':
          description: User has not created any study plans

  /studyplan/semester/{study_plan_id}:
    get:
      operationId: ezConnect.study_plan.study_plan_semester.get_all_semesters
      tags:
        - Study Plan Semester
      summary: Read a collection of semester_ids from an existing study plan
      parameters:
        - $ref: "#/components/parameters/study_plan_id"
      responses:
        '200':
          description: Read a collection of semester_ids from an existing study plan
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: Study plan does not exist
    post:
      operationId: ezConnect.study_plan.study_plan_semester.create_semester
      tags:
        - Study Plan Semester
      summary: Create a new semester in an existing study plan
      parameters:
        - $ref: "#/components/parameters/study_plan_id"
      responses:
        '204':
          description: Study plan semester successfully created
        '404':
          description: Study plan does not exist
  
  /api/study_plan_semester/{semester_id}:
    get:
      operationId: ezConnect.study_plan.study_plan_semester.get_a_semester
      tags:
        - Study Plan Semester
      summary: Read information from a specific study plan semester
      parameters:
        - $ref: "#/components/parameters/semester_id"
      responses:
        '200':
          description: Read information from a specific study plan
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/StudyPlanSemesterInformation"
        '404':
          description: Study plan semester does not exist
    put:
      operationId: ezConnect.study_plan.study_plan_semester.update_semester_courses
      tags:
        - Study Plan Semester
      summary: Update courses in an existing study plan semester
      parameters:
        - $ref: "#/components/parameters/semester_id"
      requestBody:
        description: "List of course codes that are in the given semester"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                course_codes:
                  type: array
            example:
              course_codes: [CS1101S, CS1231S, MA1521]
      responses:
        '200':
          description: Update courses in an existing study plan semester
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/StudyPlanSemesterInformation"
        '400':
          description: No information was inputted
        '404':
          description: Study plan semester does not exist
    delete:
      operationId: ezConnect.study_plan.study_plan_semester.delete_semester
      tags:
        - Study Plan Semester
      summary: Delete an existing study plan semester
      parameters:
        - $ref: "#/components/parameters/semester_id"
      responses:
        '204':
          description: Study plan semester successfully deleted
        '404':
          description: Study plan does not exist