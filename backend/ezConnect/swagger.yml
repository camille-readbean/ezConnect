openapi: 3.0.0
info:
  title: "EzCopnnect REST API"
  description: "An API about people and notes"
  version: "0.0.1"

servers:
  - url: "/api"

components:
  schemas:
    SignUpRequest:
      type: "object"
      required:
        - email
      properties:
        email:
          type: string
          format: email
    SignUpNewUser:
      type: "object"
      required:
        - name
        - year
        - password
        - course
      properties:
        name:
          type: string
        year:
          type: integer
          maximum: 6
          minimum: 1
        course:
          type: string
        password:
          type: string
          format: password
    StudyPlan:
      type: object
      properties:
        date_updated:
          type: string
          format: date-time
        is_published:
          type: boolean
        title:
          type: string
        description:
          type: string
        num_of_likes:
          type: integer
        creator_id:
          type: integer
        semesters:
          type: object
  parameters:
    emailToken:
      in: path
      name: emailToken
      required: true
      schema:
        type: string
        minLength: 32
        maxLength: 32
        format: byte
      description: "Verification token embedded in the url given by the email"
    emailQueryString:
      in: query
      name: emailQueryString
      required: true
      schema:
        type: string
        format: email
      description: "Email address of the sign up request this token is associated with"
    user_id:
      in: path
      name: user_id
      required: true
      schema:
        type: integer
      description: "The id of the user that this request is associated with"
    study_plan_id:
      in: path
      name: study_plan_id
      required: true
      schema:
        type: string
        format: uuid
      description: "The id of the study plan that this request is associated with"
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: "ezConnect.auth.login.decode_token"
        
paths: 
  /auth/signup:
    post: 
      operationId: "ezConnect.auth.signup.request"
      tags: 
        - "Auth"
        - "Sign Up"
      summary: "Send an email with the verification link for signing up"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpRequest"
      responses:
        "200":
          description: "Verification email sent"
  /auth/signup/{emailToken}:
    put:
      operationId: "ezConnect.auth.signup.verify"
      tags:
        - "Auth"
        - "Sign Up"
      summary: "Verify email token and email to grant token for onboarding api"
      parameters:
        - $ref: "#/components/parameters/emailToken"
        - $ref: "#/components/parameters/emailQueryString"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpNewUser"
            example:
              name: "John Doe"
              year: 2
              course: "Double major in Social Work and Psychology"
              password: "VeryStrongPassword"
      responses:
        "200":
          description: "JSON with user id and JWT token"
  /auth/login:
    post:
      operationId: "ezConnect.auth.login.login_user"
      tags:
        - "Auth"
      summary: "Logs in a user by checking their email and password and returns a JWT token"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
            example:
              email: "hello@u.nus.edu"
              password: "VeryStrongPassword"
      responses:
        '200':
          description: JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                  JWT:
                    type: string
        '401':
          description: Unauthorized, wrong password or email
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /auth/login/who-am-i:
    get:
      operationId: "ezConnect.auth.login.who_am_i"
      tags:
        - "Auth"
      summary: "Returns the user ID of the authenticated user"
      security:
        - jwt: []
      responses:
        '200':
          description: User ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
        '401':
          description: Unauthorized



  /studyplan:
    get:
      operationId: "ezConnect.study_plan.studyplan.get_published_study_plans"
      summary: "Read a collection of published study plans"
      responses:
        '200':
          description: Study plans
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudyPlan"
    post:
      operationId: "ezConnect.study_plan.studyplan.create_study_plan"
      summary: "Create a study plans"
      requestBody:
        description: "Study plan to create"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                creator_id:
                  type: integer
              required:
                - creator_id
            example:
              creator_id: 3
      responses:
        '200':
          description: Study plan successfully created
    
  /studyplan/{study_plan_id}:
    get:
      operationId: "ezConnect.study_plan.studyplan.get_a_study_plan"
      summary: "Read a particular study plan"
      parameters:
        - $ref: "#/components/parameters/study_plan_id"
      responses:
        '200': 
          description: Read a particular study plan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudyPlan"
        '404':
          description: Study plan does not exist
    put:
      operationId: "ezConnect.study_plan.studyplan.update_study_plan"
      summary: "Update an existing study plan"
      parameters:
        - $ref: "#/components/parameters/study_plan_id"
      requestBody:
        description: "Study plan to update"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_published:
                  type: boolean
                title:
                  type: string
                description:
                  type: string
                num_of_likes:
                  type: integer
            example:
              is_published: True
              title: "Chemistry major with minor in nutrition"
              description: "Y2 student under CHS. Started minor in Y2. I overloaded in Y1S2 and I recommend doing this."
              num_of_likes: 25
      responses:
        '200':
          description: Update an existing study plan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudyPlan"
        '404':
          description: Study plan does not exist
    delete:
      operationId: "ezConnect.study_plan.studyplan.delete_study_plan"
      summary: "Delete an existing study plan"
      parameters:
        - $ref: "#/components/parameters/study_plan_id"
      responses:
        '200':
          description: Delete an existing study plan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudyPlan"
        '404':
          description: Study plan does not exist
    
  /studyplan/personal/{user_id}:
    get:
      operationId: "ezConnect.study_plan.studyplan.get_personal_study_plans"
      summary: "Read a collection of personal study plans"
      parameters:
        - $ref: "#/components/parameters/user_id"
      responses:
        '200': 
          description: Read a collection of personal study plans
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudyPlan"
        '404':
          description: User has not created any study plans