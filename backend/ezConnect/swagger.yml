openapi: 3.0.0
info:
  title: "EzCopnnect REST API"
  description: "An API about people and courses"
  version: "0.0.2"

servers:
  - url: "/api"

components:
  schemas:
    SignUpNewUser:
      type: "object"
      required:
        - name
        - email
        - year
        - degree
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        year:
          type: integer
          maximum: 6
          minimum: 1
        degree:
          type: string
        programme:
          type: string
    StudyPlan:
      type: object
      properties:
        date_updated:
          type: string
          format: date-time
        is_published:
          type: boolean
        title:
          type: string
        description:
          type: string
        num_of_likes:
          type: integer
        creator_id:
          type: integer
        semesters:
          type: object
  parameters:
    user_id:
      in: path
      name: user_id
      required: true
      schema:
        type: string
        minLength: 36
        maxLength: 36
        format: uuid
      description: "User ID"
    study_plan_id:
      in: path
      name: study_plan_id
      required: true
      schema:
        type: string
        format: uuid
      description: "The id of the study plan that this request is associated with"
  securitySchemes:
    # Keeping it as JWT to faciliate debugging
    # Get the token manually from frontend and input it to authorise...
    # Swagger does not see mto support 
    # Also help in debugging as we can use a custom dev only jwt to skip
    # Azure B2C login, which is hard to do in CI/CD in the future...
    jwt:
      type: http
      description: |
        This actually relies on Azure AD B2C in the frontend for login
        Kept as JWT to enable manual input of the access token in Swagger UI
        for testing purposes. Swagger does not seem to work with Auth Code Flow 
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: "ezConnect.auth.login.decode_token"

        
paths: 
  /user/create-user:
    put: 
      operationId: "ezConnect.auth.signup.create_user"
      tags:
        - "Sign Up"
      summary: |
        Create account for user after logging in with Azure AD B2C.
        User ID comes from Azure B2C, will be used as primary key.
        UserId will come from token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpNewUser"
            example:
              name: "John Doe"
              email: "EXXXXXXX@u.nus.edu"
              year: 2
              degree: "Double major in Social Work and Psychology"
              programme: "College of Alice and Peter Tan"
              azure_ad_oid: 12345678-1234-1234-1234-1234abvdefgh
      security:
        - jwt: []
      responses:
        "200":
          description: User ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: integer
        "409":
          description: "Invalid request: user already exist in database"
  /auth/login/who-am-i:
    get:
      operationId: "ezConnect.auth.login.who_am_i"
      tags:
        - "Auth"
      summary: "Returns the user ID of the authenticated user"
      security:
        - jwt: []
      responses:
        '200':
          description: User ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  azure_ad_oid:
                    type: string
                  user_id:
                    type: string
                  name:
                    type: string
        '401':
          description: Unauthorized



  /studyplan:
    get:
      operationId: "ezConnect.study_plan.studyplan.get_published_study_plans"
      summary: "Read a collection of published study plans"
      responses:
        '200':
          description: Study plans
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudyPlan"
    post:
      operationId: "ezConnect.study_plan.studyplan.create_study_plan"
      summary: "Create a study plans"
      requestBody:
        description: "Study plan to create"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                creator_id:
                  type: integer
              required:
                - creator_id
            example:
              creator_id: 3
      responses:
        '200':
          description: Study plan successfully created
    
  /studyplan/{study_plan_id}:
    get:
      operationId: "ezConnect.study_plan.studyplan.get_a_study_plan"
      summary: "Read a particular study plan"
      parameters:
        - $ref: "#/components/parameters/study_plan_id"
      responses:
        '200': 
          description: Read a particular study plan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudyPlan"
        '404':
          description: Study plan does not exist
    put:
      operationId: "ezConnect.study_plan.studyplan.update_study_plan"
      summary: "Update an existing study plan"
      parameters:
        - $ref: "#/components/parameters/study_plan_id"
      requestBody:
        description: "Study plan to update"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_published:
                  type: boolean
                title:
                  type: string
                description:
                  type: string
                num_of_likes:
                  type: integer
            example:
              is_published: True
              title: "Chemistry major with minor in nutrition"
              description: "Y2 student under CHS. Started minor in Y2. I overloaded in Y1S2 and I recommend doing this."
              num_of_likes: 25
      responses:
        '200':
          description: Update an existing study plan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudyPlan"
        '404':
          description: Study plan does not exist
    delete:
      operationId: "ezConnect.study_plan.studyplan.delete_study_plan"
      summary: "Delete an existing study plan"
      parameters:
        - $ref: "#/components/parameters/study_plan_id"
      responses:
        '200':
          description: Delete an existing study plan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudyPlan"
        '404':
          description: Study plan does not exist
    
  /studyplan/personal/{user_id}:
    get:
      operationId: "ezConnect.study_plan.studyplan.get_personal_study_plans"
      summary: "Read a collection of personal study plans"
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
      responses:
        '200': 
          description: Read a collection of personal study plans
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudyPlan"
        '404':
          description: User has not created any study plans